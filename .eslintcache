[{"/Users/dilanwithanachchi/Sites/netcorpapp/src/index.js":"1","/Users/dilanwithanachchi/Sites/netcorpapp/src/App.js":"2","/Users/dilanwithanachchi/Sites/netcorpapp/src/serviceWorker.js":"3","/Users/dilanwithanachchi/Sites/netcorpapp/src/app/store.js":"4","/Users/dilanwithanachchi/Sites/netcorpapp/src/helpers/PrivateRoute.js":"5","/Users/dilanwithanachchi/Sites/netcorpapp/src/features/User/Signup.js":"6","/Users/dilanwithanachchi/Sites/netcorpapp/src/features/User/UserSlice.js":"7","/Users/dilanwithanachchi/Sites/netcorpapp/src/features/User/Login.js":"8","/Users/dilanwithanachchi/Sites/netcorpapp/src/features/Vehicles/Dashboard.js":"9","/Users/dilanwithanachchi/Sites/netcorpapp/src/features/Vehicles/VehiclesSlice.js":"10"},{"size":691,"mtime":1612322896000,"results":"11","hashOfConfig":"12"},{"size":715,"mtime":1639009376718,"results":"13","hashOfConfig":"12"},{"size":5004,"mtime":1612322896000,"results":"14","hashOfConfig":"12"},{"size":293,"mtime":1639002436521,"results":"15","hashOfConfig":"12"},{"size":402,"mtime":1612322896000,"results":"16","hashOfConfig":"12"},{"size":5961,"mtime":1612322896000,"results":"17","hashOfConfig":"12"},{"size":4559,"mtime":1639004055569,"results":"18","hashOfConfig":"12"},{"size":5017,"mtime":1639006281954,"results":"19","hashOfConfig":"12"},{"size":1849,"mtime":1639010212456,"results":"20","hashOfConfig":"12"},{"size":1792,"mtime":1639009639909,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"qqt6m3",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dilanwithanachchi/Sites/netcorpapp/src/index.js",["46"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport toast, { Toaster } from 'react-hot-toast';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n      <Toaster />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["47","48"],"/Users/dilanwithanachchi/Sites/netcorpapp/src/App.js",["49"],"/Users/dilanwithanachchi/Sites/netcorpapp/src/serviceWorker.js",[],"/Users/dilanwithanachchi/Sites/netcorpapp/src/app/store.js",[],"/Users/dilanwithanachchi/Sites/netcorpapp/src/helpers/PrivateRoute.js",[],"/Users/dilanwithanachchi/Sites/netcorpapp/src/features/User/Signup.js",["50","51","52"],"import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { signupUser, userSelector, clearState } from './UserSlice';\nimport { useHistory } from 'react-router-dom';\nimport toast from 'react-hot-toast';\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const { register, errors, handleSubmit } = useForm();\n  const history = useHistory();\n\n  const { isFetching, isSuccess, isError, errorMessage } = useSelector(\n    userSelector\n  );\n  const onSubmit = (data) => {\n    dispatch(signupUser(data));\n  };\n\n  useEffect(() => {\n    return () => {\n      dispatch(clearState());\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isSuccess) {\n      dispatch(clearState());\n      history.push('/');\n    }\n\n    if (isError) {\n      toast.error(errorMessage);\n      dispatch(clearState());\n    }\n  }, [isSuccess, isError]);\n\n  return (\n    <Fragment>\n      <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n        <div class=\"sm:mx-auto sm:w-full sm:max-w-md\">\n          <h2 class=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Sign Up to your account\n          </h2>\n        </div>\n        <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n            <form\n              className=\"space-y-6\"\n              onSubmit={handleSubmit(onSubmit)}\n              method=\"POST\"\n            >\n              <div>\n                <label\n                  for=\"name\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Name\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    ref={register({ required: true })}\n                    autocomplete=\"name\"\n                    required\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n              <div>\n                {/* <label\n                  for=\"email\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Email address\n                </label> */}\n                <div className=\"mt-1\">\n                  <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    autocomplete=\"email\"\n                    required\n                    ref={register({\n                      pattern: /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/i,\n                    })}\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label\n                  for=\"password\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Password\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    ref={register({ required: true })}\n                    autocomplete=\"current-password\"\n                    required\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  {isFetching ? (\n                    <Fragment>\n                      <svg\n                        class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <circle\n                          class=\"opacity-25\"\n                          cx=\"12\"\n                          cy=\"12\"\n                          r=\"10\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"4\"\n                        ></circle>\n                        <path\n                          class=\"opacity-75\"\n                          fill=\"currentColor\"\n                          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                        ></path>\n                      </svg>\n\n                      <p>Signing up</p>\n                    </Fragment>\n                  ) : (\n                    <p> Sign up</p>\n                  )}\n                </button>\n              </div>\n            </form>\n            <div class=\"mt-6\">\n              <div class=\"relative\">\n                <div class=\"relative flex justify-center text-sm\">\n                  <span class=\"px-2 bg-white text-gray-500\">\n                    Or <Link to=\"login\"> Login</Link>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Signup;\n","/Users/dilanwithanachchi/Sites/netcorpapp/src/features/User/UserSlice.js",[],"/Users/dilanwithanachchi/Sites/netcorpapp/src/features/User/Login.js",["53","54","55","56"],"import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loginUser, userSelector, clearState } from './UserSlice';\nimport toast from 'react-hot-toast';\nimport { useHistory } from 'react-router-dom';\n\nconst Login = ({}) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { register, errors, handleSubmit } = useForm();\n  const { isFetching, isSuccess, isError, errorMessage } = useSelector(\n    userSelector\n  );\n  const onSubmit = (data) => {\n    dispatch(loginUser(data));\n  };\n\n  useEffect(() => {\n    return () => {\n      dispatch(clearState());\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isError) {\n      toast.error(errorMessage);\n      dispatch(clearState());\n    }\n  \n\n    if (isSuccess) {\n      dispatch(clearState());\n      history.push('/');\n    }\n  }, [isError, isSuccess]);\n\n  return (\n    <Fragment>\n      <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n        <div class=\"sm:mx-auto sm:w-full sm:max-w-md\">\n          <h2 class=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Sign in to your account\n          </h2>\n        </div>\n        <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n            <form\n              className=\"space-y-6\"\n              onSubmit={handleSubmit(onSubmit)}\n              method=\"POST\"\n            >\n              <div>\n                <label\n                  for=\"email\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Email address\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    ref={register({\n                      pattern: /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/i,\n                    })}\n                    required\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label\n                  for=\"password\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Password\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    ref={register({ required: true })}\n                    autoComplete=\"current-password\"\n                    required\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  {isFetching ? (\n                    <svg\n                      class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <circle\n                        class=\"opacity-25\"\n                        cx=\"12\"\n                        cy=\"12\"\n                        r=\"10\"\n                        stroke=\"currentColor\"\n                        stroke-width=\"4\"\n                      ></circle>\n                      <path\n                        class=\"opacity-75\"\n                        fill=\"currentColor\"\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                      ></path>\n                    </svg>\n                  ) : null}\n                  Sign in\n                </button>\n              </div>\n            </form>\n            <div class=\"mt-6\">\n              <div class=\"relative\">\n                <div class=\"relative flex justify-center text-sm\">\n                  <span class=\"px-2 bg-white text-gray-500\">\n                    Or <Link to=\"signup\"> Signup</Link>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Login;\n","/Users/dilanwithanachchi/Sites/netcorpapp/src/features/Vehicles/Dashboard.js",["57","58"],"/Users/dilanwithanachchi/Sites/netcorpapp/src/features/Vehicles/VehiclesSlice.js",[],{"ruleId":"59","severity":1,"message":"60","line":8,"column":8,"nodeType":"61","messageId":"62","endLine":8,"endColumn":13},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"59","severity":1,"message":"67","line":4,"column":50,"nodeType":"61","messageId":"62","endLine":4,"endColumn":54},{"ruleId":"59","severity":1,"message":"68","line":11,"column":21,"nodeType":"61","messageId":"62","endLine":11,"endColumn":27},{"ruleId":"69","severity":1,"message":"70","line":25,"column":6,"nodeType":"71","endLine":25,"endColumn":8,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":37,"column":6,"nodeType":"71","endLine":37,"endColumn":26,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":9,"column":16,"nodeType":"77","messageId":"78","endLine":9,"endColumn":18},{"ruleId":"59","severity":1,"message":"68","line":12,"column":21,"nodeType":"61","messageId":"62","endLine":12,"endColumn":27},{"ruleId":"69","severity":1,"message":"70","line":24,"column":6,"nodeType":"71","endLine":24,"endColumn":8,"suggestions":"79"},{"ruleId":"69","severity":1,"message":"73","line":37,"column":6,"nodeType":"71","endLine":37,"endColumn":26,"suggestions":"80"},{"ruleId":"69","severity":1,"message":"70","line":17,"column":6,"nodeType":"71","endLine":17,"endColumn":8,"suggestions":"81"},{"ruleId":"69","severity":1,"message":"82","line":26,"column":6,"nodeType":"71","endLine":26,"endColumn":15,"suggestions":"83"},"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","no-native-reassign",["84"],"no-negated-in-lhs",["85"],"'Link' is defined but never used.","'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["86"],"React Hook useEffect has missing dependencies: 'dispatch', 'errorMessage', and 'history'. Either include them or remove the dependency array.",["87"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["88"],["89"],["90"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"92","fix":"96"},{"desc":"97","fix":"98"},{"desc":"92","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [dispatch]",{"range":"102","text":"103"},"Update the dependencies array to be: [isSuccess, isError, dispatch, history, errorMessage]",{"range":"104","text":"105"},{"range":"106","text":"103"},"Update the dependencies array to be: [dispatch, errorMessage, history, isError, isSuccess]",{"range":"107","text":"108"},{"range":"109","text":"103"},"Update the dependencies array to be: [dispatch, history, isError]",{"range":"110","text":"111"},[735,737],"[dispatch]",[937,957],"[isSuccess, isError, dispatch, history, errorMessage]",[733,735],[938,958],"[dispatch, errorMessage, history, isError, isSuccess]",[582,584],[752,761],"[dispatch, history, isError]"]